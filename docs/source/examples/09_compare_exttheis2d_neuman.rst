
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/09_compare_exttheis2d_neuman.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_09_compare_exttheis2d_neuman.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_09_compare_exttheis2d_neuman.py:


extended Theis 2D vs. transient solution for apparent transmissivity from Neuman
================================================================================

Both, the extended Theis and the Neuman solution, represent an effective transient
drawdown in a heterogeneous aquifer.
In both cases the heterogeneity is represented by two point statistics,
characterized by mean, variance and length scale of the log transmissivity field.
Therefore these approaches should lead to similar results.

References:

- `Neuman 2004 <https://doi.org/10.1029/2003WR002405>`__
- `Zech et. al. 2016 <http://dx.doi.org/10.1002/2015WR018509>`__

.. GENERATED FROM PYTHON SOURCE LINES 16-57



.. image:: /examples/images/sphx_glr_09_compare_exttheis2d_neuman_001.png
    :alt: $T_G=0.0001$, $\sigma^2=0.5$, $\ell=10.0$, $S=0.0001$
    :class: sphx-glr-single-img





.. code-block:: default

    import numpy as np
    from matplotlib import pyplot as plt
    from anaflow import ext_theis_2d, neuman2004


    time_labels = ["10 s", "10 min", "10 h"]
    time = [10, 600, 36000]  # 10s, 10min, 10h

    rad = np.geomspace(0.05, 4)  # radius from the pumping well in [0, 4]

    TG = 1e-4  # the geometric mean of the transmissivity
    var = 0.5  # correlation length of the log-transmissivity
    len_scale = 10.0  # variance of the log-transmissivity

    S = 1e-4  # storativity
    rate = -1e-4  # pumping rate

    head1 = ext_theis_2d(time, rad, S, TG, var, len_scale, rate)
    head2 = neuman2004(time, rad, S, TG, var, len_scale, rate)
    time_ticks = []
    for i, step in enumerate(time):
        label1 = "extended Theis 2D" if i == 0 else None
        label2 = "Transient Neuman 2004" if i == 0 else None
        plt.plot(rad, head1[i], label=label1, color="C" + str(i))
        plt.plot(rad, head2[i], label=label2, color="C" + str(i), linestyle="--")
        time_ticks.append(head1[i][-1])

    plt.title(
        "$T_G={}$, $\sigma^2={}$, $\ell={}$, $S={}$".format(TG, var, len_scale, S)
    )
    plt.xlabel("r in [m]")
    plt.ylabel("h in [m]")
    plt.legend()
    ylim = plt.gca().get_ylim()
    plt.gca().set_xlim([0, rad[-1]])
    ax2 = plt.gca().twinx()
    ax2.set_yticks(time_ticks)
    ax2.set_yticklabels(time_labels)
    ax2.set_ylim(ylim)
    plt.tight_layout()
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.732 seconds)


.. _sphx_glr_download_examples_09_compare_exttheis2d_neuman.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: 09_compare_exttheis2d_neuman.py <09_compare_exttheis2d_neuman.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: 09_compare_exttheis2d_neuman.ipynb <09_compare_exttheis2d_neuman.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
